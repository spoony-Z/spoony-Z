const t=JSON.parse('{"key":"v-b0d9ff9c","path":"/learning-notes/java/%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%B3%A8%E8%A7%A3/JDK%E5%86%85%E7%BD%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%B3%A8%E8%A7%A3%E7%B1%BB%E5%9E%8B.html","title":"JDK内置的基本注解类型","lang":"zh-CN","frontmatter":{"order":3,"description":"JDK内置的基本注解类型 注解的理解 注解(Annotation)也被称为元数据(Metadata)，用于修饰解释 包、类、方法、属性、构造器、局部变量等数据信息 和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。 在 JavaSE 中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 JavaEE 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 javaEE 旧版中所遗留的繁元代码和 XML 配置等","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/spoony-z/learning-notes/java/%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%B3%A8%E8%A7%A3/JDK%E5%86%85%E7%BD%AE%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%B3%A8%E8%A7%A3%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"SOBER"}],["meta",{"property":"og:title","content":"JDK内置的基本注解类型"}],["meta",{"property":"og:description","content":"JDK内置的基本注解类型 注解的理解 注解(Annotation)也被称为元数据(Metadata)，用于修饰解释 包、类、方法、属性、构造器、局部变量等数据信息 和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。 在 JavaSE 中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 JavaEE 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 javaEE 旧版中所遗留的繁元代码和 XML 配置等"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T01:10:56.000Z"}],["meta",{"property":"article:author","content":"SOBER"}],["meta",{"property":"article:modified_time","content":"2023-06-13T01:10:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JDK内置的基本注解类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-13T01:10:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SOBER\\",\\"url\\":\\"https://github.com/spoony-Z\\"}]}"]]},"headers":[{"level":2,"title":"注解的理解","slug":"注解的理解","link":"#注解的理解","children":[]},{"level":2,"title":"基本的 Annotation 介绍","slug":"基本的-annotation-介绍","link":"#基本的-annotation-介绍","children":[{"level":3,"title":"三个基本的 Annotation","slug":"三个基本的-annotation","link":"#三个基本的-annotation","children":[]},{"level":3,"title":"@Deprecated 的说明","slug":"deprecated-的说明","link":"#deprecated-的说明","children":[]},{"level":3,"title":"基本的 Annotation 应用案例","slug":"基本的-annotation-应用案例","link":"#基本的-annotation-应用案例","children":[]}]}],"git":{"createdTime":1686418292000,"updatedTime":1686618656000,"contributors":[{"name":"杨胜军","email":"shenjun_y@yeah.net","commits":3}]},"readingTime":{"minutes":1.57,"words":471},"filePathRelative":"learning-notes/java/枚举和注解/JDK内置的基本注解类型.md","localizedDate":"2023年6月11日","excerpt":"<h1> JDK内置的基本注解类型</h1>\\n<h2> 注解的理解</h2>\\n<ol>\\n<li>注解(Annotation)也被称为元数据(Metadata)，用于修饰解释 包、类、方法、属性、构造器、局部变量等数据信息</li>\\n<li>和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。</li>\\n<li>在 <strong>JavaSE</strong> 中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 <strong>JavaEE</strong> 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 <strong>javaEE</strong> 旧版中所遗留的繁元代码和 <strong>XML</strong> 配置等</li>\\n</ol>","autoDesc":true}');export{t as data};
