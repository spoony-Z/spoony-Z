import{_ as p,X as o,Y as e,Z as c,$ as s,a2 as n,a0 as t,a3 as a,D as r}from"./framework-6cd8c18b.js";const i="/spoony-z/assets/18-96ad399d.png",B="/spoony-z/assets/19-717806ba.png",y="/spoony-z/assets/20-6275c3ac.png",d={},F=s("h1",{id:"类与对象-oop",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#类与对象-oop","aria-hidden":"true"},"#"),n(" 类与对象(OOP)")],-1),C=a(`<h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><div class="hint-container tip"><p class="hint-container-title">张老太养了两只猫猫: 一只名字叫小白,今年3岁，白色。还有一只叫小花,今年100岁,花色。请编写一个程序，当用户输入小猫的名字时就显示该猫的名字，年龄，颜色。</p><blockquote><p>如果用户输入的小猫名 错误.则显示 张老太没有这只猫猫。</p></blockquote></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个类</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 名字</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 年龄</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> color</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 颜色</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用OOP面向对象解决</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实例化一直猫[ 创建一只猫 ]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1.new Cat() 创建一只猫</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2.Cat cat1 = new Cat(); 把创建的猫赋给 cat1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 3.cat1 就是一个对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 4.访问 cat1 中的属性 cat1.name</span></span>
<span class="line"><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> cat1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Cat</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;姓名&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">13</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;red&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Sytem</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">nam</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cat1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对象在内存中的分布示意图" tabindex="-1"><a class="header-anchor" href="#对象在内存中的分布示意图" aria-hidden="true">#</a> 对象在内存中的分布示意图</h2><figure><img src="`+i+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="属性-成员变量" tabindex="-1"><a class="header-anchor" href="#属性-成员变量" aria-hidden="true">#</a> 属性 / 成员变量</h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><ol><li><p>从概念或叫法上看: 成员变量 = 属性 = field (即 成员变量是用来表示属性 的，授课中，统一叫 属性)</p></li><li><p>属性是类的一个组成部分，一般是<strong>基本数据类型</strong>,也可是<strong>引用类型</strong>(对象，数组) 比如我们前面定义猫类 的 int age 就是属性</p></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Car</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> price</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> color</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] master</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项和细节说明" tabindex="-1"><a class="header-anchor" href="#注意事项和细节说明" aria-hidden="true">#</a> 注意事项和细节说明</h3><ol><li>属性的定义语法同变量，示例: 访问修饰符 属性类型 属性名：简单介绍访问修饰符: 控制属性的访问范围有四种访问修饰符 public, proctected, 默认, private</li><li>属性的定义类型可以为任意类型，包含基本类型或引用类型</li><li>属性如果不赋值，有默认值，规则和数组一致</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 1.创建 Person 对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 2.p1 是对象名（对象引用）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 3.new Person() 创建对象空间（数据）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 对象属性的默认值，遵守规则：int 0, byte 0 ···</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> p1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">   </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> sal</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">   </span><span style="color:#C678DD;">boolean</span><span style="color:#E06C75;"> isPass</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建对象" tabindex="-1"><a class="header-anchor" href="#创建对象" aria-hidden="true">#</a> 创建对象</h2><ol><li>先声明在创建<div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> cat</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 声明对象</span></span>
<span class="line"><span style="color:#E06C75;">cat </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Cat</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// 创建对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>直接创建<div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> cat </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Cat</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="类和对象的分配机制" tabindex="-1"><a class="header-anchor" href="#类和对象的分配机制" aria-hidden="true">#</a> 类和对象的分配机制</h2><figure><img src="`+B+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="对象的创建过程" tabindex="-1"><a class="header-anchor" href="#对象的创建过程" aria-hidden="true">#</a> 对象的创建过程</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;jack&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),v=s("li",null,[n("先加载 "),s("strong",null,"Person"),n(" 类信息(属性和方法信息,只会加载一次)")],-1),E=s("li",null,"在堆中分配空间,进行默认初始化(看规则)",-1),A=s("li",null,"把地址赋给 p，p 就指向对象",-1),u={href:"http://p.name",target:"_blank",rel:"noopener noreferrer"},b=a(`<h2 id="属性方法" tabindex="-1"><a class="header-anchor" href="#属性方法" aria-hidden="true">#</a> 属性方法</h2><h3 id="演示" tabindex="-1"><a class="header-anchor" href="#演示" aria-hidden="true">#</a> 演示</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 创建 spack 方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 1.public 表示方法是公开的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 2.void 表示方法没有返回值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 3.spack() spack是方法名 () 是形参列表</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 创建 getSum 方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * int 表示该方法会返回一个 int 值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Hello</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">       </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 创建方法</span></span>
<span class="line"><span style="color:#ABB2BF;">       </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">spack</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 调用</span></span>
<span class="line"><span style="color:#ABB2BF;">       </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSum</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> spack</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">n</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Syste</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;创建方法&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">int</span><span style="color:#61AFEF;"> getSum</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> b;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">spack</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 同一个类中的方法 直接调用，不用创建</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">B</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">h</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">B</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 创建 B 对象</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">h</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 调用 B 对象的方法</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> c;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 夸类调用</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">B</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">int</span><span style="color:#61AFEF;"> sum</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> b;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">spack</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 同一个类中的方法 直接调用，不用创建</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> c;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法的调用机制" tabindex="-1"><a class="header-anchor" href="#方法的调用机制" aria-hidden="true">#</a> 方法的调用机制</h2><figure><img src="`+y+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="克隆对象" tabindex="-1"><a class="header-anchor" href="#克隆对象" aria-hidden="true">#</a> 克隆对象</h2><div class="hint-container tip"><p class="hint-container-title">要求：</p><p>编写一个方法 <strong>copyPerson</strong>，可以复制一个 <strong>Person</strong> 对象，返回复制的对象。克隆对象, 注意要求得到新对象和原来的对象是两个<strong>独立的对象</strong>，只是他们的<strong>属性相同</strong></p></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Hello</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;yang&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">27</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">MyTools</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">tools</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MyTools</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">p2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">tools</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">copyPerson</span><span style="color:#ABB2BF;">(p);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/** 验证 */</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(p </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> p2); </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Mytools</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#61AFEF;"> copyPerson</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">p</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">/** 创建一个新的对象 */</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">p2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function m(h,D){const l=r("ExternalLinkIcon");return o(),e("div",null,[F,c(" more "),C,s("ol",null,[v,E,A,s("li",null,[n("进行指定初始化，比如 "),s("a",u,[n("p.name"),t(l)]),n(' = "jac" p.age =10')])]),b])}const f=p(d,[["render",m],["__file","类与对象(OOP).html.vue"]]);export{f as default};
