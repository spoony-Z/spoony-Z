import{_ as n,W as a,X as l,Y as o,Z as s,$ as p,a0 as e}from"./framework-91490e6a.js";const t={},c=s("h1",{id:"tolocalestring与tostring的区别",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tolocalestring与tostring的区别","aria-hidden":"true"},"#"),p(" toLocaleString与toString的区别")],-1),r=e(`<ol><li><h3 id="tolocalestring-返回对象的字符串表示-该字符串与执行环境的地区对应" tabindex="-1"><a class="header-anchor" href="#tolocalestring-返回对象的字符串表示-该字符串与执行环境的地区对应" aria-hidden="true">#</a> toLocaleString( )返回对象的字符串表示，该字符串与执行环境的地区对应；</h3></li><li><h3 id="tostring-返回对象的字符串表示" tabindex="-1"><a class="header-anchor" href="#tostring-返回对象的字符串表示" aria-hidden="true">#</a> toString( )返回对象的字符串表示</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`数字型\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">6666</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocaleString</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//&quot;6,666&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//&quot;6666&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    # </span><span style="color:#E06C75;">可以看到</span><span style="color:#ABB2BF;">，</span><span style="color:#E06C75;">当数字是三位以上时</span><span style="color:#ABB2BF;">，</span><span style="color:#E06C75;">会每三位出现一个分隔号</span><span style="color:#ABB2BF;">；</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`字符串\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;6666&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocaleString</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//&quot;6666&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//&quot;6666&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    # </span><span style="color:#E06C75;">返回结果不变</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`数组\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocaleString</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">//1,2,3</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">//1,2,3</span></span>
<span class="line"><span style="color:#ABB2BF;">	# </span><span style="color:#E06C75;">返回结果不变</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">\`日期\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">dt</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">dt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLocaleString</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">//2022/12/3 13:25:04</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">dt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">//TSat Dec 03 2022 13:25:04 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#ABB2BF;">	# </span><span style="color:#E06C75;">返回结果不同</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>区别：</strong> LocaleString() 会根据你机器的本地环境来返回字符串，它和 toString() 返回的值在不同的本地环境下使用的符号可能变化；所以使用toString()是保险的方法，它不会因为本地环境（例如国家）改变而改变；如果是获取时间，建议使用 LocaleString</p></li></ol>`,1);function B(i,y){return a(),l("div",null,[c,o(" more "),r])}const A=n(t,[["render",B],["__file","toLocaleString与toString的区别.html.vue"]]);export{A as default};
