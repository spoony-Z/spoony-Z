import{_ as s,W as n,X as l,Y as e,$ as a,a0 as p,Z as i}from"./framework-b8ce1a77.js";const o=""+new URL("3-f3415e2f.png",import.meta.url).href,r=""+new URL("4-658d81e2.png",import.meta.url).href,c=""+new URL("5-b54a8688.png",import.meta.url).href,t=""+new URL("6-e5400c87.png",import.meta.url).href,d={},v=a("h1",{id:"快速入门",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#快速入门","aria-hidden":"true"},"#"),p(" 快速入门")],-1),y=i(`<h2 id="java特性" tabindex="-1"><a class="header-anchor" href="#java特性" aria-hidden="true">#</a> java特性</h2><p>1.java语言是面向对象的（oop）</p><p>3.跨平台性（一个便衣好的 .class 文件可以在多个系统下运行，中特性叫跨平台性）</p><p>4.java语言是解释性语言</p><p>​ 解释性语言：javascript，PHP，java</p><p>​ 编译性语言：c、c++</p><h2 id="开发软件" tabindex="-1"><a class="header-anchor" href="#开发软件" aria-hidden="true">#</a> 开发软件</h2><p>editplus、notepad++、Sublime Text、IDEA、eclipse</p><h2 id="java运行机制及运行过程" tabindex="-1"><a class="header-anchor" href="#java运行机制及运行过程" aria-hidden="true">#</a> java运行机制及运行过程</h2><h3 id="机制-java核心机制-java-虚拟机-jvm-java-virtual-machine" tabindex="-1"><a class="header-anchor" href="#机制-java核心机制-java-虚拟机-jvm-java-virtual-machine" aria-hidden="true">#</a> 机制：java核心机制-java 虚拟机 [ JVM （java virtual machine） ]</h3><h3 id="运行过程" tabindex="-1"><a class="header-anchor" href="#运行过程" aria-hidden="true">#</a> 运行过程：</h3><p>​ 1.JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域，负责执行指令，管理数据、内存、寄存器，包含JDK中。</p><p>​ 2.对于不同的平台，有不同的虚拟机</p><p>​ 3.java虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”</p><h2 id="什么是jdk、jre" tabindex="-1"><a class="header-anchor" href="#什么是jdk、jre" aria-hidden="true">#</a> 什么是JDK、JRE</h2><h3 id="jdk" tabindex="-1"><a class="header-anchor" href="#jdk" aria-hidden="true">#</a> JDK</h3><p>​ 1.JDK全称（java Development Kit Java开发工具包） ​ JDK = JRE + java的开发工具 [ java、javac、javadoc、javap等 ]</p><p>​ 2.JDK是提供给开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以 安装了JDK，就不用单独安装JRE了</p><h3 id="jre" tabindex="-1"><a class="header-anchor" href="#jre" aria-hidden="true">#</a> JRE</h3><p>​ 1.JRE（Java Runtime Environment Java运行环境）</p><p>​ JRE = JVM + Java的核心类库[ 类 ]</p><p>​ 2.包括java虚拟机（JVM Java Virtual Machine）和Java程序所需的核心类库等， 如果只运行 Java 程序，计算机安装JRE即可</p><h3 id="jdk、jre和jvm的关系" tabindex="-1"><a class="header-anchor" href="#jdk、jre和jvm的关系" aria-hidden="true">#</a> JDK、JRE和JVM的关系</h3><p>​ 1.JDK = JRE + 开发工具集（例如：javac、java编译工具等）</p><p>​ 2.JRE = JVM + java SE标准类库</p><p>​ 3.JDK = JVM + java SE标准类库 + 开发工具集</p><p>​ 4.只运行开发好的 .class 文件 只需要JRE</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="需求说明" tabindex="-1"><a class="header-anchor" href="#需求说明" aria-hidden="true">#</a> 需求说明：</h3><p>​ 要求开发一个Hello.java 程序，可以输出 &quot;hello，world！&quot;</p><h3 id="开发步骤" tabindex="-1"><a class="header-anchor" href="#开发步骤" aria-hidden="true">#</a> 开发步骤</h3><p>​ 1.将 Java 代码编写到扩展名为 Hello.java 的文件中</p><p>​ 2.通过javac 命令对该 java 文件进行编译，生成 .class文件。</p><p>​ 3.通过java 命令对生成的 class 文件进行运行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 这是java的快速入门，演示java的开发步骤</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 1. public class Hello 表示 Hello 是一个类， 是一个 public 公共类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 2. Hello{} 表示一个类的开始和结束</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 3. public static void main(String[] args) 表示一个主方法，即程序的入口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 4. main(){} 表示方法的开始和结束</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Hello</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#7F848E;font-style:italic;">// 编写一个main方法</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;">  </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello,word&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 可以将main方法写在非public类中，然后指定运行非 public 类，这样入口方法就是非public 的main方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Dog</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello, 狗狗&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Pig</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">static</span><span style="color:#61AFEF;"> </span><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello, 猪猪&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 一个源文件中最多只能有一个public类，其他类的个数不限</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* Dog 和 Pig 都是一个类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 编译后，每一个类对应一个 .class</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h3><figure><img src="`+o+'" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure><h2 id="_2-java-执行流程分析" tabindex="-1"><a class="header-anchor" href="#_2-java-执行流程分析" aria-hidden="true">#</a> 2. java 执行流程分析</h2><figure><img src="'+r+'" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure><h3 id="什么是编译" tabindex="-1"><a class="header-anchor" href="#什么是编译" aria-hidden="true">#</a> 什么是编译？</h3><figure><img src="'+c+'" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure><h3 id="什么是运行" tabindex="-1"><a class="header-anchor" href="#什么是运行" aria-hidden="true">#</a> 什么是运行？</h3><p>​ 1.有了可执行的java程序(Hello.class字节码文件) ​ 2.通过运行工具java.exe对字节码文件进行执行,本质就是.class装载到jivm 机执行</p><h3 id="java程序开发注意事项" tabindex="-1"><a class="header-anchor" href="#java程序开发注意事项" aria-hidden="true">#</a> java程序开发注意事项！</h3><p>对修改后的Hello.java源文件需要重新编译，生成新的class文件后，再进行执行,才能生效</p><h3 id="java开发细节说明" tabindex="-1"><a class="header-anchor" href="#java开发细节说明" aria-hidden="true">#</a> Java开发细节说明</h3><figure><img src="'+t+'" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure>',47);function h(B,u){return n(),l("div",null,[v,e(" more "),y])}const F=s(d,[["render",h],["__file","java快速入门.html.vue"]]);export{F as default};
