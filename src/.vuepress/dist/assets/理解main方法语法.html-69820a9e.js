import{_ as a,X as i,Y as n,$ as t}from"./framework-2185e866.js";const r="/spoony-z/assets/30-2aeb5397.png",e={},o=t('<h1 id="理解-main-方法语法" tabindex="-1"><a class="header-anchor" href="#理解-main-方法语法" aria-hidden="true">#</a> 理解 main 方法语法</h1><h2 id="深入理解-main-方法" tabindex="-1"><a class="header-anchor" href="#深入理解-main-方法" aria-hidden="true">#</a> 深入理解 main 方法</h2><blockquote><p>解释main方法的形式：<strong>public static void main(String[] args)</strong></p></blockquote><ol><li>java虚拟机需要调用类的 <strong>main()</strong> 方法，所以该方法的访问权限必须是 <strong>public</strong></li><li>java虚拟机在执行 <strong>main()</strong> 方法时不必创建对象，所以该方法必须是 <strong>static</strong></li><li>该方法接收 <strong>String</strong> 类型的数组参数，该数组中保存执行java命令时传递给所运行的类的参数,案例演示，接收参数</li><li>java 执行的程序 参数1 参数2 参数3</li></ol><div class="hint-container warning"><p class="hint-container-title">特别提示</p><ul><li>在 <strong>main()</strong> 方法中，我们可以直接调用 main 方法所在类的静态方法或静态属性</li><li>但不能直接访问该类中的<strong>非静态成员</strong>，必须<strong>创建该类的一个实例对象</strong>后，才能通过这个对象去访问类中的非静态成员，</li></ul></div><h2 id="idea中给-main-方法传参" tabindex="-1"><a class="header-anchor" href="#idea中给-main-方法传参" aria-hidden="true">#</a> idea中给 main 方法传参</h2><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7),s=[o];function l(c,d){return i(),n("div",null,s)}const h=a(e,[["render",l],["__file","理解main方法语法.html.vue"]]);export{h as default};
