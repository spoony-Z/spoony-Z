const e=JSON.parse('{"key":"v-7c37aee5","path":"/learning-notes/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1(%E9%AB%98%E7%BA%A7)/final%E5%85%B3%E9%94%AE%E5%AD%97.html","title":"final 关键字","lang":"zh-CN","frontmatter":{"order":5,"description":"final 关键字 基本介绍 final 可以修饰类、属性、方法和局部变量 使用场景 当不希望类被继承时,可以用 final 修饰 当不希望父类的某个方法被子类覆盖/重写(override)时,可以用final关键字修饰。 当不希望类的某个属性的值被修改,可以用final修饰. 当不希望某个局部变量被修改，可以使用final修饰 演示 final class AA {} // 不允许继承 AA 所以下面继承会报错 class BB extends AA {}","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/spoony-z/learning-notes/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1(%E9%AB%98%E7%BA%A7)/final%E5%85%B3%E9%94%AE%E5%AD%97.html"}],["meta",{"property":"og:site_name","content":"SOBER"}],["meta",{"property":"og:title","content":"final 关键字"}],["meta",{"property":"og:description","content":"final 关键字 基本介绍 final 可以修饰类、属性、方法和局部变量 使用场景 当不希望类被继承时,可以用 final 修饰 当不希望父类的某个方法被子类覆盖/重写(override)时,可以用final关键字修饰。 当不希望类的某个属性的值被修改,可以用final修饰. 当不希望某个局部变量被修改，可以使用final修饰 演示 final class AA {} // 不允许继承 AA 所以下面继承会报错 class BB extends AA {}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-08T19:22:38.000Z"}],["meta",{"property":"article:author","content":"SOBER"}],["meta",{"property":"article:modified_time","content":"2023-06-08T19:22:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"final 关键字\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-08T19:22:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SOBER\\",\\"url\\":\\"https://github.com/spoony-Z\\"}]}"]]},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"演示","slug":"演示","link":"#演示","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1684429757000,"updatedTime":1686252158000,"contributors":[{"name":"杨胜军","email":"shenjun_y@yeah.net","commits":2}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"learning-notes/java/面向对象(高级)/final关键字.md","localizedDate":"2023年5月19日","excerpt":"<h1> final 关键字</h1>\\n<h2> 基本介绍</h2>\\n<p><strong>final</strong> 可以修饰类、属性、方法和局部变量</p>\\n<h2> 使用场景</h2>\\n<ol>\\n<li>当不希望类被继承时,可以用 <strong>final</strong> 修饰</li>\\n<li>当不希望父类的某个方法被子类覆盖/重写(override)时,可以用final关键字修饰。</li>\\n<li>当不希望类的某个属性的值被修改,可以用final修饰.</li>\\n<li>当不希望某个局部变量被修改，可以使用final修饰</li>\\n</ol>\\n<h2> 演示</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">final</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #E5C07B\\">AA</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #ABB2BF\\">{}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">// 不允许继承 AA 所以下面继承会报错</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #E5C07B\\">BB</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #C678DD\\">extends</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #E5C07B\\">AA</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #ABB2BF\\">{}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
