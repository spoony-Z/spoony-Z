import{_ as e,X as a,Y as i,$ as r}from"./framework-2185e866.js";const t={},l=r('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><h2 id="为什么需要脚手架" tabindex="-1"><a class="header-anchor" href="#为什么需要脚手架" aria-hidden="true">#</a> 为什么需要脚手架?</h2><p>脚手架本质就是一个工具，作用是能够让使用者专注于写代码，它可以让我们只用一个命令就生成一个已经配置好的项目，而不用我们再花时间去配置和安装相关依赖，可以在很大程度上提升我们的开发效率。比如我们常用的create-vue和create-react-app就是脚手架，很多大厂也都有自己的脚手架。</p><h2 id="一个脚手架应该具备哪些功能" tabindex="-1"><a class="header-anchor" href="#一个脚手架应该具备哪些功能" aria-hidden="true">#</a> 一个脚手架应该具备哪些功能?</h2><p>我们以vue官方的脚手架create-vue为例来分析下一个脚手架应该具备哪些功能?</p><ul><li>运行命令创建项目</li><li>用户根据自己需要选择一些配置项</li><li>根据选择的配置项会生成一个模版项目</li><li>通过分析crqate-vue，我们可以知道，一个脚手架如果想要创建一个项目，最少要有以下两点功能: <ol><li>可以通过命令行和用户交互</li><li>根据交互的结果去生成对应的模版项目</li></ol></li></ul>',6),c=[l];function h(d,n){return a(),i("div",null,c)}const s=e(t,[["render",h],["__file","介绍.html.vue"]]);export{s as default};
