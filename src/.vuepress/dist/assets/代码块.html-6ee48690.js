const e=JSON.parse('{"key":"v-3b70ef82","path":"/learning-notes/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1(%E9%AB%98%E7%BA%A7)/%E4%BB%A3%E7%A0%81%E5%9D%97.html","title":"代码块","lang":"zh-CN","frontmatter":{"order":3,"description":"代码块 基本介绍 代码化块又称为初始化块,属于类中的成员【即 是类的一部分】，类似于方法，将逻辑语句封装在方法体中，通过什包围起来。 但和方法不同，没有方法名，没有返回，没有参数，只有方法体，而且不用通过对象或类显式调用，而是加载类时，或创建对象时隐式调用。 基本语法 [修饰符]{ 逻辑代码 }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/spoony-z/learning-notes/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1(%E9%AB%98%E7%BA%A7)/%E4%BB%A3%E7%A0%81%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"SOBER"}],["meta",{"property":"og:title","content":"代码块"}],["meta",{"property":"og:description","content":"代码块 基本介绍 代码化块又称为初始化块,属于类中的成员【即 是类的一部分】，类似于方法，将逻辑语句封装在方法体中，通过什包围起来。 但和方法不同，没有方法名，没有返回，没有参数，只有方法体，而且不用通过对象或类显式调用，而是加载类时，或创建对象时隐式调用。 基本语法 [修饰符]{ 逻辑代码 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-08T19:22:38.000Z"}],["meta",{"property":"article:author","content":"SOBER"}],["meta",{"property":"article:modified_time","content":"2023-06-08T19:22:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-08T19:22:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SOBER\\",\\"url\\":\\"https://github.com/spoony-Z\\"}]}"]]},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":2,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":2,"title":"代码块的好处","slug":"代码块的好处","link":"#代码块的好处","children":[]},{"level":2,"title":"使用细节和注意事项","slug":"使用细节和注意事项","link":"#使用细节和注意事项","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"创建一个对象时，类的调用顺序","slug":"创建一个对象时-类的调用顺序","link":"#创建一个对象时-类的调用顺序","children":[]}],"git":{"createdTime":1684429757000,"updatedTime":1686252158000,"contributors":[{"name":"杨胜军","email":"shenjun_y@yeah.net","commits":3}]},"readingTime":{"minutes":4.56,"words":1367},"filePathRelative":"learning-notes/java/面向对象(高级)/代码块.md","localizedDate":"2023年5月19日","excerpt":"<h1> 代码块</h1>\\n<h2> 基本介绍</h2>\\n<p>代码化块又称为初始化块,属于类中的成员【即 是类的一部分】，类似于方法，将逻辑语句封装在方法体中，通过什包围起来。</p>\\n<p>但和方法不同，<strong>没有方法名</strong>，<strong>没有返回</strong>，<strong>没有参数</strong>，只有方法体，而且不用通过对象或类显式调用，而是加载类时，或创建对象时隐式调用。</p>\\n<h2> 基本语法</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #E06C75\\">[修饰符]{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #E06C75\\">    逻辑代码</span></span>\\n<span class=\\"line\\"><span style=\\"color: #E06C75\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
