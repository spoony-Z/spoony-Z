import{_ as n,X as a,Y as l,Z as p,$ as s,a2 as e,a3 as o}from"./framework-6cd8c18b.js";const c={},r=s("h1",{id:"作用域",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#作用域","aria-hidden":"true"},"#"),e(" 作用域")],-1),t=o(`<h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><ol><li>在java编程中，主要的变量就是属性(成员变量)和局部变量</li><li>我们说的局部变量一般是指在成员方法中定义的变量。[举例 Cat类: cry]</li><li>java中作用域的分类 <ul><li><strong>全局变量：</strong> 也就是属性，作用域为整个类体 Cat类: cry eat 等方法使用属性</li><li><strong>局部变量：</strong> 也就是除了属性之外的其他变量，作用域为定义它的代码块中!</li></ul></li><li>全局变量可以不赋值，直接使用，因为有默认值，局部变量必须赋值后，才能使 用，因为没有默认值。</li></ol><h2 id="演示" tabindex="-1"><a class="header-anchor" href="#演示" aria-hidden="true">#</a> 演示</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 全局变量：也就是属性，作用域为整个类体 Cat类 :cry eat 等方法使用属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#E06C75;">     </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> cry {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 1.局部变量一般是指在成员方法中定义的变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 2.n 和 name 就是局部变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         * 3.n 和 name 的作用域在 cry 方法中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         */</span></span>
<span class="line"><span style="color:#E06C75;">         </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">         </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> name </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;jack&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">         </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;输出全局变量&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> age);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> eat {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;输出全局变量&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> age);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作用注意事项和细节" tabindex="-1"><a class="header-anchor" href="#作用注意事项和细节" aria-hidden="true">#</a> 作用注意事项和细节</h2><ol><li>属性和局部变量可以重名，访问时遵循就近原则。<div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Cat</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> cry {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(age);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在同一个作用域中，比如在同一个成员方法中，两个局部变量，不能重名</li><li>属性生命周期较长，伴随着对象的创建而创建，伴随着对象的死亡而死亡。局部变量，生命周期较短，伴随着它的代码块的执行而创建，伴随着代码块的结束而死亡，即在一次方法调用过程中。</li><li>作用域范围不同 <ul><li><strong>全局变量/属性：</strong> 可以被本类使用，或其他类使用(通过对象调用)</li><li><strong>局部变量：</strong> 只能在本类中对应的方法中使用</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">test</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> cry {</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> p1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Person</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">p1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">age</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> age </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>修饰符不同 <ul><li><strong>全局变量/属性：</strong> 可以加修饰符</li><li><strong>局部变量：</strong> 不可以加修饰符</li></ul></li></ol>`,6);function i(y,d){return a(),l("div",null,[r,p(" more "),t])}const C=n(c,[["render",i],["__file","作用域.html.vue"]]);export{C as default};
