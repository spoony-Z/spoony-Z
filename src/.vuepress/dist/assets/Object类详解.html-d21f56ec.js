import{_ as s,X as a,Y as n,$ as l}from"./framework-2185e866.js";const o={},e=l(`<h1 id="object类详解" tabindex="-1"><a class="header-anchor" href="#object类详解" aria-hidden="true">#</a> Object类详解</h1><h2 id="equals方法" tabindex="-1"><a class="header-anchor" href="#equals方法" aria-hidden="true">#</a> equals方法</h2><blockquote><p><strong>==</strong> 和 <strong>equals</strong> 的对比</p></blockquote><h3 id="是一个比较运算符" tabindex="-1"><a class="header-anchor" href="#是一个比较运算符" aria-hidden="true">#</a> == 是一个比较运算符</h3><ul><li>既可以判断基本类型，又可以判断引用类型</li><li>如果判断基本类型，判断的是值是否相等。</li></ul><div class="hint-container tip"><p class="hint-container-title">示例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">10.0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li>如果判断引用类型，判断的是地址是否相等，即判定是不是同一个对象</li></ul><div class="hint-container tip"><p class="hint-container-title">案例说明</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">static</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">void</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">main</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] args) {</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">A</span><span style="color:#E06C75;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">A</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">A</span><span style="color:#E06C75;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">A</span><span style="color:#E06C75;"> c </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(a </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> c);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(b </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> c);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">B</span><span style="color:#E06C75;"> bobj </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printIn</span><span style="color:#ABB2BF;">(bobj </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> c);</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">B</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">A</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">extends</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">B</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">{}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="equals方法-1" tabindex="-1"><a class="header-anchor" href="#equals方法-1" aria-hidden="true">#</a> equals方法</h3><blockquote><p>是Object类中的方法，只能判断引用类型，如何看Jdk源码 默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。比如 Integer, String [看看String 和Integer的 equals 源代码]</p></blockquote>`,10),p=[e];function c(t,r){return a(),n("div",null,p)}const y=s(o,[["render",c],["__file","Object类详解.html.vue"]]);export{y as default};
