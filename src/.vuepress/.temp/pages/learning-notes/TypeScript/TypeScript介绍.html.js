export const data = JSON.parse("{\"key\":\"v-79fea449\",\"path\":\"/learning-notes/TypeScript/TypeScript%E4%BB%8B%E7%BB%8D.html\",\"title\":\"TypeScript 介绍\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"TypeScript 介绍 TypeScript为什么要为JS添加类型支持? 背景:JS的类型系统存在“先天缺陷”，JS代码中绝大部分错误都是类型错误(UncaughtTypeError)。 问题:增加了找Bug、改Bug的时间，严重影响开发效率 从编程语言的动静来区分，TypeScript属于静态类型的编程语言，JS属于动态类型的编程语言。 静态类型:编译期做类型检查;动态类型:执行期做类型检查。 代码编译和代码执行的顺序:1编译2执行 对于JS来说:需要等到代码真正去执行的时候才能发现错误(晚)，对于 TS 来说:在代码编译的时候 (代码执行前)就可以发现错误 (早)。并且，配合VSCode 等开发工具，T5 可以提前到在编写代码的同时就发现代码中的错误，减少找 Bug、改 Bug 时间。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/spoony-z/learning-notes/TypeScript/TypeScript%E4%BB%8B%E7%BB%8D.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"SOBER\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"TypeScript 介绍\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"TypeScript 介绍 TypeScript为什么要为JS添加类型支持? 背景:JS的类型系统存在“先天缺陷”，JS代码中绝大部分错误都是类型错误(UncaughtTypeError)。 问题:增加了找Bug、改Bug的时间，严重影响开发效率 从编程语言的动静来区分，TypeScript属于静态类型的编程语言，JS属于动态类型的编程语言。 静态类型:编译期做类型检查;动态类型:执行期做类型检查。 代码编译和代码执行的顺序:1编译2执行 对于JS来说:需要等到代码真正去执行的时候才能发现错误(晚)，对于 TS 来说:在代码编译的时候 (代码执行前)就可以发现错误 (早)。并且，配合VSCode 等开发工具，T5 可以提前到在编写代码的同时就发现代码中的错误，减少找 Bug、改 Bug 时间。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"SOBER\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"TypeScript 介绍\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"SOBER\\\",\\\"url\\\":\\\"https://github.com/spoony-Z\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"TypeScript为什么要为JS添加类型支持?\",\"slug\":\"typescript为什么要为js添加类型支持\",\"link\":\"#typescript为什么要为js添加类型支持\",\"children\":[]},{\"level\":2,\"title\":\"TypeScript相比JS的优势\",\"slug\":\"typescript相比js的优势\",\"link\":\"#typescript相比js的优势\",\"children\":[]}],\"readingTime\":{\"minutes\":1.52,\"words\":455},\"filePathRelative\":\"learning-notes/TypeScript/TypeScript介绍.md\",\"excerpt\":\"<h1> TypeScript 介绍</h1>\\n<h2> TypeScript为什么要为JS添加类型支持?</h2>\\n<ol>\\n<li>背景:JS的类型系统存在“先天缺陷”，JS代码中绝大部分错误都是类型错误(UncaughtTypeError)。</li>\\n<li>问题:增加了找Bug、改Bug的时间，严重影响开发效率</li>\\n<li>从编程语言的动静来区分，TypeScript属于静态类型的编程语言，JS属于动态类型的编程语言。</li>\\n<li>静态类型:编译期做类型检查;动态类型:执行期做类型检查。</li>\\n<li>代码编译和代码执行的顺序:1编译2执行</li>\\n<li>对于JS来说:需要等到代码真正去执行的时候才能发现错误(晚)，对于 TS 来说:在代码编译的时候 (代码执行前)就可以发现错误 (早)。并且，配合VSCode 等开发工具，T5 可以提前到在编写代码的同时就发现代码中的错误，减少找 Bug、改 Bug 时间。</li>\\n</ol>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
