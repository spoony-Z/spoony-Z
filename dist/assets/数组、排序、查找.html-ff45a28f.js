import{_ as n,W as a,X as l,Y as p,$ as s,a0 as o,Z as e}from"./framework-b8ce1a77.js";const r="/spoony-z/assets/16-7a9317b8.png",c="/spoony-z/assets/17-8f4e8822.png",t={},i=s("h1",{id:"数组、排序、查找",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#数组、排序、查找","aria-hidden":"true"},"#"),o(" 数组、排序、查找")],-1),y=e(`<h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><p>数组可以存放多个同一类型的数据。数组也是一种数据类型，是<strong>引用类型</strong></p><h3 id="演示" tabindex="-1"><a class="header-anchor" href="#演示" aria-hidden="true">#</a> 演示</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * double[] 表示 是double类型的数组，数组名为 hens</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * {3, 5, 1, 3.4, 2, 50} 表示数组的值/元素</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[] hens </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3.4</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">50</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 遍历数组得到数组的所有元素的和， 使用for</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * hens.length 为该数组长度</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">hens</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;第&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> (i </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;个元素的值&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> hens[i]);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h3><ol><li><p><strong>动态初始化</strong>(一)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Scanner</span><span style="color:#E06C75;"> myScanner </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Scanner</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">in</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 声明并开辟空间</span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 赋值</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">myScanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">nextDouble</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 3. 打印</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i]);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>动态初始化（二）</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 先声明数组，arr 为 null</span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> arr[]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">myScanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">nextDouble</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i]);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="注意事项和细节" tabindex="-1"><a class="header-anchor" href="#注意事项和细节" aria-hidden="true">#</a> 注意事项和细节</h3><ol><li><p>数组是多个相同类型数据的组合，实现对这些数据的统一管理</p></li><li><p>数组中的元素可以是<strong>任何数据类型</strong>，包括<strong>基本类型</strong>和<strong>引用类型</strong>但是<strong>不能混用</strong>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#E06C75;">} </span><span style="color:#7F848E;font-style:italic;">// 报错 int 声明为int类型，所以不能包含 String</span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> { </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3.2</span><span style="color:#E06C75;">} </span><span style="color:#7F848E;font-style:italic;">// 正确</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数组创建后，如果没有赋值有默认值为 int 0, short 0, byte 0, long 0, float 0.0, double 0.0, char \\u0000 boolean false, String null</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">short</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">short</span><span style="color:#E06C75;">[</span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i]);</span></span>
<span class="line"><span style="color:#E06C75;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用数组的步骤</p><p>(1).声明数组并开辟空间</p><p>(2).给数组各个元素赋值</p><p>(3).使用数组</p></li><li><p>数组的下标是从0开始的。</p></li><li><p>数组下标必须在指定范围内使用，否则报: 下标越界异常，比如，int [] arr = new int[5]; 则有效下标为 0-4</p></li><li><p>数组属<strong>引用类型</strong>，数组型数据是<strong>对象(object)</strong></p></li></ol><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><div class="hint-container tip"><p class="hint-container-title">1. 创建一个char类型的26个元素的数组，分别 放置A&#39;-Z。使用for循环访问所有元素并打印出来。提示: char类型数据运算，A&#39;+2 -&gt;C</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">char</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;">[</span><span style="color:#D19A66;">26</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#C678DD;">char</span><span style="color:#E06C75;">)(</span><span style="color:#98C379;">&#39;A&#39;</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> i) </span><span style="color:#7F848E;font-style:italic;">// int 强制转换为 char</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">lenght</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i]);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">2. 请求出一个数组 int[] 的最大值 {4,-1,9，10,23}，并得到对应的下标</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> { </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">99</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> max </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> index </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">lenght</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">if</span><span style="color:#E06C75;">(arr[i] </span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> max){</span></span>
<span class="line"><span style="color:#E06C75;">        max </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr[i]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        index </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="数组的赋值机制" tabindex="-1"><a class="header-anchor" href="#数组的赋值机制" aria-hidden="true">#</a> 数组的赋值机制</h3><ol><li><p>基本数据类型赋值，这个值就是具体的数据，而且相互不影响</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> n1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">n2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// n2 的变化不会影响到 n1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数组在默认情况下是<strong>引用传递</strong>，赋的值是地址， 方式为 <strong>引用赋值</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> { </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3</span><span style="color:#E06C75;"> }</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> arr2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">arr2[</span><span style="color:#D19A66;">0</span><span style="color:#E06C75;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">// arr2 和 arr1 是一个地址，arr2 的变化会影响到 arr1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure></li></ol><h3 id="数组拷贝" tabindex="-1"><a class="header-anchor" href="#数组拷贝" aria-hidden="true">#</a> 数组拷贝</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr1 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">30</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 创建一个新的数组 arr2， 开辟新的数据空间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 大小 arr1.length;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 遍历 arr1，把每个元素拷贝到 arr2 对饮的元素位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr2 </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">lenght</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr1</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr2[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr1[i]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+c+`" alt="image-20230224003002648" tabindex="0" loading="lazy"><figcaption>image-20230224003002648</figcaption></figure><h3 id="数组的反转" tabindex="-1"><a class="header-anchor" href="#数组的反转" aria-hidden="true">#</a> 数组的反转</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">33</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">55</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">66</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 思路</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * arr[0] 和 arr[5] 进行交换 {66, 22, 33, 44, 55, 11}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * arr[1] 和 arr[4] 进行交换 {66, 55, 33, 44, 22, 11}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * arr[2] 和 arr[3] 进行交换 {66, 55, 44, 33, 22, 11}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 一共要交换 3 次 = arr.length / 2 每次交换时，对应的下标 是 arr[i] 和 arr[arr.length - 1 -i]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> **/</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> temp </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> len </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">apr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">( </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    temp </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr[</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> i]</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> </span><span style="color:#7F848E;font-style:italic;">//保存</span></span>
<span class="line"><span style="color:#E06C75;">    arr[</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr[il</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    arr[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> temp</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组添加" tabindex="-1"><a class="header-anchor" href="#数组添加" aria-hidden="true">#</a> 数组添加</h3><blockquote><p>原始数组使用静态分配 int[] arr = {1, 2, 3}<br> 增加的元素4，直接放在数组的最后 arr = {1, 2, 3, 4} arrNew = {1, 2, 3, 4}<br> 用户可以通过如下方法来决定是否继续添加，添加成功，是否继续? y/n arrNew = (1,2,3.4)<br></p></blockquote><div class="hint-container tip"><p class="hint-container-title">实现动态的给数组添加元素效果，实现对数组扩容</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 思路分析</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 1.定义初始数组 int[] arr = {1, 2, 3}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 2.定义新数组 int[] arrNew = new int[arr.lenght + 1];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 3.遍历 arr 数组，依次将arr的元素拷贝到 arrNew数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 4.将 4 赋给 arrNew[arrNew.length - 1] = 4;把4赋给arrNew最后一个元素</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 5.让 arr 指向 arrNew ; arr = arrNew; 那么原来arr数组就被自动销毁</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 6.创建一个 Scanner 可以接受用户输入</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 7.因为用户什么时候退出，不确定，使用 do-while + break 来控制</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#E5C07B;">Scanner</span><span style="color:#E06C75;"> MyScanner </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> </span><span style="color:#61AFEF;">Scanner</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">in</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">do</span><span style="color:#E06C75;">{</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[] arrNew </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">lenght</span><span style="color:#E06C75;"> </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">        arrNew[i] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arr[i]</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arrNew</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> n </span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">lenght</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i]);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> key </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">MyScanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">charAt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">if</span><span style="color:#E06C75;">(key </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&#39;n&#39;</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#C678DD;">break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span><span style="color:#C678DD;">while</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">true</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;你退出了添加&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><p>冒泡排序</p><h2 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h2><h3 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h3><p><strong>顺序查找</strong> 和 <strong>二分查找</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;">[] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span><span style="color:#98C379;">&quot;第一&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;第二&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;第三&quot;</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">double</span><span style="color:#E06C75;"> name </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#98C379;">&quot;第二&quot;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">    </span><span style="color:#C678DD;">if</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equals</span><span style="color:#ABB2BF;">(arr[i])</span><span style="color:#E06C75;">){</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#E5C07B;">System</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">out</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">println</span><span style="color:#ABB2BF;">(arr[i] </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> i);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多维数组" tabindex="-1"><a class="header-anchor" href="#多维数组" aria-hidden="true">#</a> 多维数组</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#E06C75;">[][] arr </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {{</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> {</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#E06C75;">}} </span><span style="color:#7F848E;font-style:italic;">// 嵌套数组</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30);function B(d,C){return a(),l("div",null,[i,p(" more "),y])}const v=n(t,[["render",B],["__file","数组、排序、查找.html.vue"]]);export{v as default};
